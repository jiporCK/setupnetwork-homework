Organizations:
  - &OrdererOrg
    Name: OrderingService
    ID: OrdererMSP
    MSPDir: ../crypto-config/ordererOrganizations/personal-network.com/msp
    Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

    OrdererEndpoints:
            - orderer.personal-network.com:7050

  - &Org1
    Name: Org1MSP
    ID: Org1MSP #Ensure that CORE_PEER_LOCALMSPID is set to Org1MSP
    MSPDir: ../crypto-config/peerOrganizations/org1.personal-network.com/msp
    Policies:
         # Reader: determines which identities can read from channel. It's important for ensuring that the identities who can access channel are specified  
          Readers:
              Type: Signature
              Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
              # this means that admin, peer, and client from org1 can read from the channel
        # controls the identities that can write to the channel, such as submitting the transactions 
          Writers:
              Type: Signature
              Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
          Admins:
              Type: Signature
              Rule: "OR('Org1MSP.admin')" 
        # this means that only peer node from the org1 can endorse the transaction 
          Endorsement:
              Type: Signature
              Rule: "OR('Org1MSP.peer')"     

    AnchorPeers:
      - Host: peer0.org1.personal-network.com
        Port: 7051

  - &Org2
    Name: Org2MSP
    ID: Org2MSP
    MSPDir: ../crypto-config/peerOrganizations/org2.personal-network.com/msp
    Policies:
          Readers:
              Type: Signature
              Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
          Writers:
              Type: Signature
              Rule: "OR('Org2MSP.admin', 'Org2MSP.client')"
          Admins:
              Type: Signature
              Rule: "OR('Org2MSP.admin')" 
          Endorsement:
              Type: Signature
              Rule: "OR('Org2MSP.peer')" 

    AnchorPeers:
      - Host: peer0.org2.personal-network.com
        # Port: 9051
        Port: 7051

Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true
    Orderer: &OrdererCapabilities
        V2_0: true
    Application: &ApplicationCapabilities
        V2_0: true
# Orderer
Orderer: &OrdererDefaults
    OrdererType: solo
    Addresses: 
        - orderer.personal-network.com:7050
    BatchTimeout: 2s
    BatchSize:
        MaxMessageCount: 10
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB
    # without this it still should be working fine since it's a solo orderer
    Kafka:
        Brokers: 
            - 127.0.0.1:9092
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"
Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ChannelCapabilities
# Application
Application: &ApplicationDefaults
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities

Profiles:
    OrdererGenesis:
      <<: *ChannelDefaults
      Capabilities:
        <<: *ChannelCapabilities
      Orderer:
        <<: *OrdererDefaults
        Organizations:
          - *OrdererOrg
        Capabilities:
          <<: *OrdererCapabilities
      Consortiums:
        MyFirstConsortium:
          Organizations:
            - *Org1 
            - *Org2
            
    ChannelDemo:
# Ensure that organization that you want to join the channel are indeed part of the consortium
      Consortium: MyFirstConsortium
      <<: *ChannelDefaults
      Application:
        <<: *ApplicationDefaults
        Organizations:
          - *Org1
          - *Org2
          
        Capabilities:
          <<: *ApplicationCapabilities


# configtxgen -profile OrdererGenesis -outputBlock ./channel-artifacts/genesis.block -channelID channelorderergenesis